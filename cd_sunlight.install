<?php
// $Id$

/**
 * @file
 * Install/Updates for cd_sunlight.
 */

/**
 * Implementation of hook_schema().
 */
function cd_sunlight_schema() {
  $schema['cd_sunlight_cron'] = array(
    'description' => t('Contains contact_ids that will be sent for CD Lookup on the next cron run.'),
    'fields' => array(
      'contact_id' => array(
        'description' => t('CiviCRM Contact ID.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('contact_id'),
  );

  $schema['cd_sunlight_legislators'] = array(
    'description' => t('The current legislators as returned by the Sunlight API'),
    'fields' => array(
      'legislator_id' => array(
        'description' => t('Autoincrementing primary key.'),
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'last_update_time' => array(
        'description' => t('When this row was last updated.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'firstname' => array(
        'type' => 'varchar',
        'length' => '64',
        'not null' => FALSE,
      ),
      'middlename' => array(
        'type' => 'varchar',
        'length' => '64',
        'not null' => FALSE,
      ),
      'lastname' => array(
        'type' => 'varchar',
        'length' => '64',
        'not null' => FALSE,
      ),
      'name_suffix' => array(
        'type' => 'varchar',
        'length' => '8',
        'not null' => FALSE,
      ),
      'nickname' => array(
        'type' => 'varchar',
        'length' => '64',
        'not null' => FALSE,
      ),
      'title' => array(
        'description' => t('Either "Sen" or "Rep"'),
        'type' => 'varchar',
        'length' => '3',
        'not null' => FALSE,
      ),
      'party' => array(
        'description' => t('Either D, R, or I'),
        'type' => 'varchar',
        'length' => '1',
        'not null' => FALSE,
      ),
      'state' => array(
        'type' => 'varchar',
        'length' => '2',
        'not null' => TRUE,
        'default' => '__',
      ),
      'district' => array(
        'description' => t('Only for Reps.  The CD that they legislate.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'size' => 'tiny',
        'not null' => FALSE,
      ),
      'in_office' => array(
        'description' => t('Is the legislator current.  Always 1 for our purposes.'),
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 1,
      ),
      'gender' => array(
        'type' => 'varchar',
        'length' => '1',
        'not null' => FALSE,
      ),
      'phone' => array(
        'type' => 'varchar',
        'length' => '32',
        'not null' => FALSE,
      ),
      'fax' => array(
        'type' => 'varchar',
        'length' => '32',
        'not null' => FALSE,
      ),
      'website' => array(
        'type' => 'varchar',
        'length' => '64',
        'not null' => FALSE,
      ),
      'webform' => array(
        'type' => 'varchar',
        'length' => '64',
        'not null' => FALSE,
      ),
      'email' => array(
        'type' => 'varchar',
        'length' => '64',
        'not null' => FALSE,
      ),
      'congress_office' => array(
        'type' => 'varchar',
        'length' => '256',
        'not null' => FALSE,
      ),
      'bioguide_id' => array(
        'description' => t('http://bioguide.congress.gov/'),
        'type' => 'varchar',
        'length' => '16',
        'not null' => FALSE,
      ),
      'votesmart_id' => array(
        'description' => t('http://votesmart.org/'),
        'type' => 'varchar',
        'length' => '16',
        'not null' => FALSE,
      ),
      'fec_id' => array(
        'description' => t('TODO'),
        'type' => 'varchar',
        'length' => '16',
        'not null' => FALSE,
      ),
      'govtrack_id' => array(
        'description' => t('http://govtrack.us/'),
        'type' => 'varchar',
        'length' => '16',
        'not null' => FALSE,
      ),
      'crp_id' => array(
        'description' => t('http://www.opensecrets.org/'),
        'type' => 'varchar',
        'length' => '16',
        'not null' => FALSE,
      ),
      'eventful_id' => array(
        'description' => t('DEPRICATED'),
        'type' => 'varchar',
        'length' => '32',
        'not null' => FALSE,
      ),
      'congresspedia_url' => array(
        'description' => t('http://www.opencongress.org/'),
        'type' => 'varchar',
        'length' => '64',
        'not null' => FALSE,
      ),
      'twitter_id' => array(
        'description' => t('http://twitter.com/'),
        'type' => 'varchar',
        'length' => '16',
        'not null' => FALSE,
      ),
      'youtube_url' => array(
        'description' => t('http://youtube.com'),
        'type' => 'varchar',
        'length' => '64',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('legislator_id'),
    'indexes' => array(
      'cd_sunlight_legislators_party_idx' => array('party'),
      'cd_sunlight_legislators_state_district_idx' => array('state', 'district'),
      'cd_sunlight_legislators_title_idx' => array('title'),
    ),
  );

  return $schema;
}

/**
 * Implementation of hook_install().
 *
 * @return none
 */
function cd_sunlight_install() {
  // Create tables.
  drupal_install_schema('cd_sunlight');
}

/**
 * Implementation of hook_uninstall().
 *
 * @return none
 */
function cd_sunlight_uninstall() {
  // Remove tables.
  drupal_uninstall_schema('cd_sunlight');

  // Remove variables.
  variable_del('cd_sunlight_api_key');
  variable_del('cd_sunlight_cron_load_limit');
  variable_del('cd_sunlight_geocoding_off');
  variable_del('cd_sunlight_geocode_username');
  variable_del('cd_sunlight_http_auth_user');
  variable_del('cd_sunlight_http_auth_password');
  variable_del('cd_sunlight_api_key');
  variable_del('cd_sunlight_cron_contact_limit');
}

/**
 * Install tables if they don't exist.
 */
function cd_sunlight_update_1() {
  $ret = array();
  if (!db_table_exists('cd_sunlight_cron')) {
    cd_sunlight_install();
    $ret[] = array('success' => TRUE, 'query' => 'Created cd_sunlight tables');
  }
  return $ret;
}

/**
 * Check that all our existing data validates.
 */
function cd_sunlight_update_2() {

  // Multi-part update
  static $limit = 50;
  if (!isset($_SESSION['cd_sunlight_update_2_contact_id'])) {
    $_SESSION['cd_sunlight_update_2_contact_id'] = 0;
    db_set_active('civicrm');
    $_SESSION['cd_sunlight_update_2_max'] = db_result(
      db_query('SELECT MAX(entity_id) FROM '. CD_SUNLIGHT_CIVICRM_CUSTOM_TABLE)
    );
    db_set_active();
  }

  // Iterate through the contacts.
  db_set_active('civicrm');
  $res = db_query(
    'SELECT entity_id as contact_id, '.
    CD_SUNLIGHT_CIVICRM_CUSTOM_FIELD_CD .' AS '. CD_SUNLIGHT_CIVICRM_CD .', '.
    CD_SUNLIGHT_CIVICRM_CUSTOM_FIELD_CD_OVERRIDE .' AS '. CD_SUNLIGHT_CIVICRM_CD_OVERRIDE .
    ' FROM '. CD_SUNLIGHT_CIVICRM_CUSTOM_TABLE .
    ' WHERE ('. CD_SUNLIGHT_CIVICRM_CUSTOM_FIELD_CD .' IS NOT NULL '.
    '  OR '.  CD_SUNLIGHT_CIVICRM_CUSTOM_FIELD_CD_OVERRIDE .' IS NOT NULL) '.
    '  AND entity_id > '. $_SESSION['cd_sunlight_update_2_contact_id'] .
    ' ORDER BY entity_id '.
    ' LIMIT 0, '. $limit
  );
  db_set_active();
  while ($contact = db_fetch_array($res)) {
    cd_sunlight_validate_civicrm_data($contact);
    $_SESSION['cd_sunlight_update_2_contact_id'] = $contact['contact_id'];
  }

  // Are we finished?
  if ($_SESSION['cd_sunlight_update_2_contact_id'] == $_SESSION['cd_sunlight_update_2_max']) {
    unset($_SESSION['cd_sunlight_update_2_contact_id']);
    unset($_SESSION['cd_sunlight_update_2_max']);
    return array();
  }
  return array(
    '#finished' => $_SESSION['cd_sunlight_update_2_contact_id'] / $_SESSION['cd_sunlight_update_2_max']
  );
}

/**
 * Removed.
 */
function cd_sunlight_update_3() {
  $ret = array();
  return $ret;
}

/**
 * Removed.
 */
function cd_sunlight_update_4() {
  $ret = array();
  return $ret;
}
